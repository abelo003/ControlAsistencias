/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cruz.mx.control.vistas;

import com.cruz.mx.control.dao.PersonalDao;
import com.cruz.mx.control.dao.beans.PersonalBean;
import com.cruz.mx.control.enums.EstadoEmpleadoNuevoEnum;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import org.apache.log4j.Logger;

/**
 *
 * @author acruzb
 */
public class NuevoEmpleado extends javax.swing.JDialog {
    
    private static final Logger LOGGER = Logger.getLogger(NuevoEmpleado.class);
    
    private PersonalDao personalDao;
    private EstadoEmpleadoNuevoEnum modo;

    /**
     * Creates new form NuevoEmpleado
     */
    public NuevoEmpleado(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setResizable(false);
        personalDao = Principal.getObject(PersonalDao.class);
    }
    
    public void setModo(EstadoEmpleadoNuevoEnum modo, PersonalBean personalBean){
        this.modo = modo;
        if(modo == EstadoEmpleadoNuevoEnum.NUEVO){
            labelTitile.setText("Agregar nuevo empleado");
            btnAgregar.setText("Agregar");
            textFieldClave.setEnabled(true);
            LOGGER.info("Se abre en modo NUEVO");
        }
        else{
            labelTitile.setText("Editar informaci√≥n de empleado existente");
            btnAgregar.setText("Aceptar");
            textFieldClave.setEnabled(false);
            setEmpleadoBeanData(personalBean);
            LOGGER.info("Se abre en modo EDICION");
        }
        this.setVisible(true);
    }
    
    private void setEmpleadoBeanData(PersonalBean personal){
        textFieldAMaterno.setText(personal.getaMaterno());
        textFieldAPaterno.setText(personal.getaPaterno());
        textFieldNombre.setText(personal.getNombre());
        textFieldRL.setText(personal.getRL());
        textFieldClave.setText(personal.getClave());
    }
    
    public void limpiarCampos(){
        textFieldAMaterno.setText("");
        textFieldAPaterno.setText("");
        textFieldClave.setText("");
        textFieldNombre.setText("");
        textFieldRL.setText("");
    }

    private boolean validarDatos(){
        if(validaFielVacio(textFieldNombre)){
            textFieldNombre.requestFocus();
            return false;
        }
        else if(validaFielVacio(textFieldAPaterno)){
            textFieldAPaterno.requestFocus();
            return false;
        }
        else if(validaFielVacio(textFieldRL)){
            textFieldRL.requestFocus();
            return false;
        }
        else if(validaFielVacio(textFieldClave)){
            textFieldClave.requestFocus();
            return false;
        }
        return true;
    }
    
    private boolean validaFielVacio(JTextField field){
        return "".equals(field.getText());
    }
    
    private void realizarCambios(PersonalBean personal){
        String mensaje;
        if(modo.equals(EstadoEmpleadoNuevoEnum.NUEVO)){
            personalDao.agregarPersonal(personal);
            mensaje = "El empleado se ha agregado exitosamente a la base de datos.";
        }
        else{
            personalDao.editarPersonal(personal);
            mensaje = "El empleado se ha editado exitosamente en la base de datos.";
        }
        JOptionPane.showMessageDialog(this, mensaje, "Empleado agregado", JOptionPane.INFORMATION_MESSAGE);
        this.dispose();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        labelTitile = new javax.swing.JLabel();
        textFieldNombre = new javax.swing.JTextField();
        textFieldAPaterno = new javax.swing.JTextField();
        textFieldAMaterno = new javax.swing.JTextField();
        textFieldRL = new javax.swing.JTextField();
        textFieldClave = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Nombre");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Apellido paterno");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Apellido materno");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("RL");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Clave");

        labelTitile.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelTitile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitile.setText("Agregar nuevo empleado");

        textFieldNombre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        textFieldAPaterno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        textFieldAMaterno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        textFieldRL.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        textFieldClave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelTitile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnCancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAgregar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textFieldNombre)
                                    .addComponent(textFieldAPaterno)
                                    .addComponent(textFieldAMaterno)
                                    .addComponent(textFieldRL)
                                    .addComponent(textFieldClave, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(40, 40, 40))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitile)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textFieldAPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textFieldAMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textFieldRL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textFieldClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnCancelar))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if(validarDatos()){
            String clave = textFieldClave.getText().trim();
            if(clave.matches("\\d\\d\\d\\d")){
                PersonalBean personal = new PersonalBean(clave);
                if(modo.equals(EstadoEmpleadoNuevoEnum.NUEVO)){
                    if(null == personalDao.existPersonal(personal)){
                        personal.setIdHorario("1");
                        personal.setNombre(textFieldNombre.getText().trim().toUpperCase());
                        personal.setaPaterno(textFieldAPaterno.getText().trim().toUpperCase());
                        personal.setaMaterno(textFieldAMaterno.getText().trim().toUpperCase());
                        personal.setRL(textFieldRL.getText().toUpperCase().trim().toUpperCase());
                        realizarCambios(personal);
                    }
                    else{
                        textFieldClave.selectAll();
                        textFieldClave.requestFocus();
                        JOptionPane.showMessageDialog(this, "La clave ya se encuentra asignada, favor de validar.", "Clave existente", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else {
                    personal.setNombre(textFieldNombre.getText().trim().toUpperCase());
                    personal.setaPaterno(textFieldAPaterno.getText().toUpperCase());
                    personal.setaMaterno(textFieldAMaterno.getText().toUpperCase());
                    personal.setRL(textFieldRL.getText().toUpperCase().toUpperCase());
                    realizarCambios(personal);
                }
            }
            else{
                textFieldClave.selectAll();
                textFieldClave.requestFocus();
                JOptionPane.showMessageDialog(this, "Favor de validar el formato de la clave (cuatros n√∫meros).", "Clave incorrecta", JOptionPane.WARNING_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Favor de validar los campos obligatorios.", "Datos incompletos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelTitile;
    private javax.swing.JTextField textFieldAMaterno;
    private javax.swing.JTextField textFieldAPaterno;
    private javax.swing.JTextField textFieldClave;
    private javax.swing.JTextField textFieldNombre;
    private javax.swing.JTextField textFieldRL;
    // End of variables declaration//GEN-END:variables
}
